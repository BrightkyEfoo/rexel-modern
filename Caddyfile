# Caddyfile for Rexel Modern Frontend
{
    # Global options
    admin off
    log default {
        output stdout
        format console
    }
    
    # Let's Encrypt email
    email {$ACME_EMAIL}
}

# Development/Local server block
:80 {
    # Handle health check
    handle /api/health {
        reverse_proxy app:3000 {
            health_uri /api/health
            health_interval 30s
            health_timeout 10s
        }
    }

    # Handle API routes (proxy to backend)
    handle /api/* {
        # Reverse proxy to backend API
        reverse_proxy {$NEXT_PUBLIC_API_URL} {
            # Health check
            health_uri /health
            health_interval 30s
            health_timeout 10s
            
            # Headers
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Handle static assets
    handle /static/* {
        reverse_proxy app:3000 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Handle _next assets
    handle /_next/* {
        reverse_proxy app:3000 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Security headers
    header {
        # Remove server information
        -Server
        
        # Security headers
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # CORS headers for API calls
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization"
    }

    # Handle CORS preflight requests
    @options {
        method OPTIONS
    }
    handle @options {
        respond 200
    }

    # Default route - proxy to Next.js app
    handle {
        reverse_proxy app:3000 {
            health_uri /api/health
            health_interval 30s
            health_timeout 10s
            
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Logging
    log {
        output stdout
        format console
    }
}

# Production server block with domain
{$FRONTEND_DOMAIN} {
    # Security headers for production
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data: https:; font-src 'self' data: https:;"
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
    }

    # Enable compression
    encode gzip

    # Handle health check
    handle /api/health {
        reverse_proxy app:3000
    }

    # Handle API routes (proxy to backend)
    handle /api/* {
        reverse_proxy {$NEXT_PUBLIC_API_URL}
    }

    # Reverse proxy to Next.js app
    reverse_proxy app:3000

    # Access logs
    log {
        output file /var/log/caddy/access.log {
            roll_size 100MB
            roll_keep 5
            roll_keep_for 720h
        }
        format json
    }
} 